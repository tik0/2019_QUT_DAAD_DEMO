<?xml version="1.0"?>
<robot name="cam" xmlns:xacro="http://www.ros.org/wiki/xacro">
<!-- link name="world" /-->
<!-- Camera -->
<xacro:macro name="cam" params="name parent xyz rpy">

  <xacro:property name="camera_mockup_height" value="0.001" /> <!-- (m) camera mockup cylinder height -->
  <xacro:property name="camera_mockup_radius" value="0.003" /> <!-- (m) camera mockup cylinder radius -->
  
  <!--joint name="${parent}_${name}_joint" type="fixed">
      <axis xyz="0 0 1" />
      <origin xyz="${xyz}" rpy="${rpy}"/>
      <parent link="${parent}"/>
      <child link="${name}"/>
  </joint-->

  <!-- Dummy joint, so that the root link has no inertia -->
  <joint name="camera_joint" type="fixed">
    <child link="${name}"/>
    <parent link="${name}_inertia_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <axis xyz="1 1 1"/>
    <dynamics damping="0.0"/>
  </joint>
  
  <!-- Dummy link, so that the root link has no inertia -->
  <link name="${name}_inertia_link">
  </link>

  <!-- Camera -->
  <link name="${name}">
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 1.57 0"/>
      <geometry>
        <cylinder radius="${camera_mockup_radius}" length="${camera_mockup_height}"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 1.57 0"/>
      <geometry>
        <cylinder radius="${camera_mockup_radius}" length="${camera_mockup_height}"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="${name}">
    <material value="Gazebo/Black"/>
  </gazebo>

  <gazebo reference="${name}">
    <sensor type="camera" name="camera1">
      <always_on>0</always_on>
      <update_rate>20.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format> <!-- RGB: R8G8B8, Gray: L8 -->
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
      <!-- plugin name="camera_controller" filename="libgazebo_ros_triggered_camera.so" -->
        <robotNamespace></robotNamespace>
        <!-- triggerTopicName>image_trigger</triggerTopicName -->
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>${name}</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>${name}</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

</xacro:macro>

<xacro:cam name="cam" parent="world" xyz="1.5 4.5 3.8" rpy="0 0 0"/>

<gazebo>
    <static>true</static>
    <self_collide>0</self_collide>
</gazebo>

</robot>


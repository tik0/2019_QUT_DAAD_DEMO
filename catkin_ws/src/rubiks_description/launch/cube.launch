<?xml version="1.0"?>
<launch>


  <!-- These are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="world_cube_x" default="0.0"/>
  <arg name="world_cube_y" default="0.0"/>
  <arg name="world_cube_z" default="0.05"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gz_gui" default="false"/>
  <arg name="gz_headless" default="false"/>
  <arg name="gz_debug" default="false"/>
  <arg name="gz_verbose" default="true"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rubiks_description)/worlds/cube.world"/>
    <arg name="debug" value="$(arg gz_debug)" />
    <arg name="gui" value="$(arg gz_gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg gz_headless)"/>
    <arg name="verbose" value="$(arg gz_verbose)"/>
  </include>

  <group ns="cube">
    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description"
      command="$(find xacro)/xacro --inorder '$(find rubiks_description)/urdf/rubiks_cube_no_mesh.xacro' world_cube_x:=$(arg world_cube_x) world_cube_y:=$(arg world_cube_y) world_cube_z:=$(arg world_cube_z)"/>

    <!-- Run a python script to send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
      args="-urdf -model rubiks_cube -param robot_description -x 0.0 -y 0.0 -z 0.0 -R 0.0 -P 0.0 -Y 0.0"/>
  </group>

  <!--load camera model-->
  <group ns="cameras">
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find rubiks_description)/urdf/camera.xacro'"/>

    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model camera -param robot_description -x 0.0 -y 0.0 -z 1.0 -R 0 -P 0 -Y 0"/>
  </group>

</launch>